{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedTodoId","setSelectedTodo","className","map","todo","classNames","id","completed","title","type","onClick","TodoFilter","setTodosFilter","todosFilter","searchQuery","setQuery","applyQuery","value","onChange","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","selectedTodo","useState","selectedUser","setSelectedUser","useEffect","userId","user","href","email","name","App","setTodos","setSearchQuery","appliedQuery","setAppliedQuery","todosList","useCallback","f","timerId","clearTimeout","args","window","debounce","filterTodos","filterQuery","filter","toLowerCase","includes","filteredTodos","useMemo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d64c9a87.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectedTodoId: Maybe<number>,\n  setSelectedTodo: (todo: Todo) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodoId,\n  setSelectedTodo,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => {\n          return (\n            <tr\n              data-cy=\"todo\"\n              className={classNames(\n                {\n                  'has-background-info-light': selectedTodoId === todo.id,\n                  '': selectedTodoId !== todo.id,\n                },\n              )}\n              key={todo.id}\n            >\n              <td className=\"is-vcentered\">{todo.id}</td>\n              <td className=\"is-vcentered\">\n                {todo.completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p className={classNames(\n                  {\n                    'has-text-success': todo.completed,\n                    'has-text-danger': !todo.completed,\n                  },\n                )}\n                >\n                  {todo.title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => {\n                    setSelectedTodo(todo);\n                  }}\n                >\n                  <span className=\"icon\">\n                    <i className={classNames(\n                      {\n                        'far fa-eye-slash': selectedTodoId === todo.id,\n                        'far fa-eye': selectedTodoId !== todo.id,\n                      },\n                    )}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  setTodosFilter: (filter: string) => void,\n  todosFilter: string,\n  searchQuery: string,\n  setQuery: (searchQuery: string) => void,\n  applyQuery: (searchQuery: string) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  setTodosFilter,\n  todosFilter,\n  searchQuery,\n  setQuery,\n  applyQuery,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={todosFilter}\n            onChange={({ target }) => setTodosFilter(target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={searchQuery}\n          onChange={({ target }) => {\n            setQuery(target.value);\n            applyQuery(target.value);\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {searchQuery && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => {\n                setQuery('');\n                applyQuery('');\n              }}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(1000)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useState, useEffect } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ntype Props = {\n  selectedTodo: Todo,\n  setSelectedTodo: () => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  setSelectedTodo,\n}) => {\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(selectedTodo.userId)\n      .then(user => setSelectedUser(user));\n  }, [selectedTodo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!selectedUser ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={setSelectedTodo}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo.completed\n                ? (\n                  <strong className=\"has-text-success\">Done</strong>\n                ) : (\n                  <strong className=\"has-text-danger\">Planned</strong>\n                )}\n\n              {' by '}\n\n              <a href={`mailto:${selectedUser.email}`}>\n                {selectedUser.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, {\n  useState, useEffect, useCallback, useMemo,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\n\nconst debounce = (f: (searchQuery: string) => void, delay: number) => {\n  let timerId: number;\n\n  return (...args: string[]) => {\n    clearTimeout(timerId);\n\n    timerId = window.setTimeout(f, delay, ...args);\n  };\n};\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[] | null>(null);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [todosFilter, setTodosFilter] = useState('all');\n  const [searchQuery, setSearchQuery] = useState('');\n  const [appliedQuery, setAppliedQuery] = useState('');\n\n  useEffect(() => {\n    getTodos()\n      .then(todosList => setTodos(todosList));\n  }, []);\n\n  const applyQuery = useCallback(\n    debounce(setAppliedQuery, 500), [],\n  );\n\n  const filterTodos = useCallback(\n    (todosList: Todo[] | null, filterQuery: string) => {\n      if (!todosList) {\n        return null;\n      }\n\n      return todosList.filter(todo => {\n        switch (todosFilter) {\n          case 'all':\n            return todo.title.toLowerCase().includes(filterQuery.toLowerCase());\n\n          case 'active':\n            return !todo.completed\n              && todo.title.toLowerCase().includes(filterQuery.toLowerCase());\n\n          case 'completed':\n            return todo.completed\n              && todo.title.toLowerCase().includes(filterQuery.toLowerCase());\n\n          default:\n            return todo;\n        }\n      });\n    },\n    [todos, todosFilter],\n  );\n\n  const filteredTodos = useMemo(() => filterTodos(todos, appliedQuery), [todos, todosFilter]);\n\n  const closeModal = () => setSelectedTodo(null);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setTodosFilter={setTodosFilter}\n                todosFilter={todosFilter}\n                searchQuery={searchQuery}\n                setQuery={setSearchQuery}\n                applyQuery={applyQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!todos && <Loader />}\n\n              {filteredTodos && (\n                <TodoList\n                  todos={filteredTodos}\n                  selectedTodoId={selectedTodo?.id || null}\n                  setSelectedTodo={setSelectedTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          setSelectedTodo={closeModal}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}